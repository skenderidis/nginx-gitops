upstream vs_app1_upstream_1 {
    zone vs_app1_upstream_1 512k;
    least_conn;
    queue 30 timeout=60s;
    server backend122.f5k8s.net max_conns=0 fail_timeout=10s;
    server backend1.f5k8s.net max_conns=0 slow_start=60s fail_timeout=4s weight=5 backup;
    server backend2.f5k8s.net max_conns=6 fail_timeout=41s;
    server backend3.f5k8s.net max_conns=0 fail_timeout=10s down service=http.tcp resolve;

    sticky cookie srv_id expires=1h domain=.example.com httponly samesite=strict secure path=/;
}

    split_clients $request_id vs_app1_splits_2 {
      80% /internal_location_splits_2_split_1 
      20% /internal_location_splits_2_split_2 
    }

    map $cookie_john $vs_app1_match_3_matches_1 {
      "john" 1;
      default 0;
    }
    map $http_xxx $vs_app1_match_3_matches_2 {
      "xxx" 1;
      default 0;
    }
    map $request_method $vs_app1_match_3_matches_3 {
      "POST" 1;
      default 0;
    }
    map $vs_app1_match_3_matches_1 $vs_app1_match_3_matches_2 $vs_app1_match_3_matches_3 $vs_app1_match_3 {
      ~^1 /internal_location_matches_3_match_1;
      ~^01 /internal_location_matches_3_match_2;
      ~^001 /internal_location_matches_3_match_3;
      default /internal_location_matches_3_default;
    }

    match vs_app1_upstream_1_match {
      status ! 500;
      header ! Refresh;;
      body ~ "Welcome to nginx!";
    }

    map $apikey_auth_token $apikey_auth_client_name_app1_api_key_policy {
        default "";
        "123123123123" "test1";
        "123123123" "test2";
    }
    limit_req_zone ${binary_remote_addr} zone=vs_app1_default-limit-policy:10M rate=1r/s;



server {
    listen 443 ssl;
    server_name test.com cafe1.example.com cafe2.example.com;
    ssl_certificate     /etc/nginx/secrets/test.crt;
    ssl_certificate_key /etc/nginx/secrets/test.key;
    ssl_protocols       TLSv1.2;

    set $apikey_auth_local_map "apikey_auth_client_name_app1_api_key_policy";
    set $apikey_auth_token $apikey_auth_hash;
    auth_request /_validate_apikey_njs;
    set $header_query_value "${http_x_my_header}${http_x_my_header1}${http_x_my_header2}${arg_my_header22}";

    allow 10.0.0.0/8;
    deny all;


    auth_jwt "My API" token=$http_token;
    auth_jwt_key_file /etc/nginx/secretsjwk-secret;



    location /test {
      rewrite ^ $vs_app1_splits_2 last;
    }

    location /test2 {
      rewrite ^ $vs_app1_matches_3 last;
    }
  

    location @hc-vs_app1_upstream_1 {
      proxy_connect_timeout 30s;
      proxy_read_timeout 30s;
      proxy_send_timeout 30s;
      proxy_pass http://vs_app1_upstream_1;
      health_check uri=/healthz port=8080 interval=20s jitter=3s fails=5 passes=5  match=vs_app1_upstream_1_match  mandatory  persistent  keepalive_time=60s;
    }

    limit_req_dry_run on;
    limit_req_status 504;
    limit_req_log_level info;
    limit_req zone=vs_app1_default_rate-limit-policy burst=8 delay=30;


    location /abc {
      proxy_pass http://vs_app1_upstream_1;

      proxy_connect_timeout 30s;
      proxy_read_timeout 30s;
      proxy_send_timeout 30s;
      client_max_body_size 1m;
      proxy_buffer_size 32k;
      proxy_buffers 4 8K;
      proxy_next_upstream error timeout;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;
      add_header Host "Value11" always;

    }
    
    location /internal_location_splits_2_split_1 {
         
      internal;
      rewrite ^ $request_uri_no_args;
      rewrite "^/test(.*)$" "/test$1" break;
      proxy_pass http://vs_app1_upstream_1;

      proxy_connect_timeout 30s;
      proxy_read_timeout 30s;
      proxy_send_timeout 30s;
      client_max_body_size 1m;
      proxy_buffer_size 32k;
      proxy_buffers 4 8K;
      proxy_next_upstream error timeout;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;

    }
    location /internal_location_splits_2_split_2 {
        
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;

    }
    
    location /internal_location_matches_3_match_1 {
        
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;

    }
    location /internal_location_matches_3_match_2 {
        
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;

    }
    location /internal_location_matches_3_match_3 {
        
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;

    }
    location /internal_location_matches_3_default {
         
      internal;
      proxy_pass http://vs_app1_upstream_1$request_uri;    

      proxy_connect_timeout 30s;
      proxy_read_timeout 30s;
      proxy_send_timeout 30s;
      client_max_body_size 1m;
      proxy_buffer_size 32k;
      proxy_buffers 4 8K;
      proxy_next_upstream error timeout;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host "$host";

      proxy_pass_request_headers on;

    }
    
    location /aaa {
        default_type text/plain;
        return 200 "Hello World\n";
        add_header x-coffee "espresso";
    }
    
}
